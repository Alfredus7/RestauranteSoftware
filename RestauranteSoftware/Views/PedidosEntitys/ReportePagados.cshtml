@model RestauranteSoftware.viewModels.PedidosViews

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutReport.cshtml";
    var fechaReporte = Model.pedidos.Any() ? Model.pedidos.Min(p => p.Fecha).ToString("dd/MM/yyyy") : string.Empty;
    var totalPedidos = Model.pedidos.Count(); // Total de pedidos
   
}

<h1>Reporte de Cocinero - Fecha: @fechaReporte</h1>

@if (ViewData["NoPedidos"] != null)
{
    <div class="alert alert-warning">
        @ViewData["NoPedidos"]
    </div>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Pedido #</th>
                <th>Estado</th>
                <th>Comidas</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pedido in Model.pedidos)
            {
                var detalles = Model.detallesPedidos.Where(d => d.PedidoId == pedido.Id).ToList();
                var rowSpan = detalles.Count > 0 ? detalles.Count : 1;  // Asegura que rowSpan sea al menos 1
                var nom = pedido.EstadoPedido.Nombre;
                if (nom == "Pagado")
                {
                    nom = nom.Replace("Pagado", "Completado");
                }
                // Fila para el pedido (se muestra una sola vez por pedido)
                <tr>
                    <td rowspan="@rowSpan">@pedido.Id</td>
                    <td rowspan="@rowSpan">@nom</td>

                    <!-- Mostrar la primera comida del pedido -->
                    <td>@detalles.FirstOrDefault()?.Comida.Nombre</td>
                </tr>

                // Fila para cada comida del pedido (si hay más de una)
                for (int i = 1; i < detalles.Count; i++)
                {
                    <tr>
                        <td>@detalles[i].Comida.Nombre</td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <div class="mt-3">
        <strong>cantidad pedidos: @totalPedidos</strong>
    </div>
}
